import logging
import requests
import telebot
import random
from lxml import html

logger = telebot.logger
telebot.logger.setLevel(logging.DEBUG)


def main(genre):
    parsed_data, movie_list, rating_list, img_list, country_list, genre_item_list, url_list = [], [], [], [], [], [], []

    genre_dict = {'–±–æ–µ–≤–∏–∫': 'action/', '—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞': 'sci-fi/', '–¥—Ä–∞–º–∞': 'drama/', '–¥–µ—Ç–µ–∫—Ç–∏–≤': 'mystery/',
                  '—É–∂–∞—Å—ã': 'horror/', '—Ñ—ç–Ω—Ç–µ–∑–∏': 'fantasy/', '–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è': 'adventure/', '—Ç—Ä–∏–ª–ª–µ—Ä': 'thriller/',
                  '–º–µ–ª–æ–¥—Ä–∞–º–∞': 'romance/', '–º—É–ª—å—Ç—Ñ–∏–ª—å–º': 'animation/',
                  '–∫–æ–º–µ–¥–∏—è': 'comedy/', '–∫—Ä–∏–º–∏–Ω–∞–ª': 'crime/'}
    url = f'https://www.kinopoisk.ru/popular/films/{genre_dict.get(genre)}?sort=popularity&tab=all'
    r = requests.get(url)
    print(r.status_code)
    t = html.fromstring(r.content.decode('utf-8'))
    try:
        page = t.xpath("//a[@class='paginator__page-number']/text()")[-1]
    except IndexError:
        page = 1
    for page_index in range(1, int(page) + 1):
        print(f'Page: {page_index}')
        url = f'https://www.kinopoisk.ru/popular/films/{genre_dict.get(genre)}?page={page_index}&sort=popularity&tab=all'
        print(url)
        r1 = requests.get(url)
        t = html.fromstring(r1.content.decode('utf-8'))
        no_movie = t.xpath("//span[@class='rating__value rating__value_positive']/text()")
        for i in range(31):
            genre_list = t.xpath(f"//div[contains(@class,'desktop-rating-selection-film-item')]"
                                 f"[{i}]/div[2]/div[1]/div[1]/div/a/p[3]/span[2]/text()")
            for item in genre_list:
                if genre in item and not '%' in no_movie:
                    name = t.xpath("//p[@class='selection-film-item-meta__name']/text()")[i - 1]
                    img = t.xpath("//img[@class='selection-film-item-poster__image']/@src")[i - 1]
                    country = t.xpath("//span[@class='selection-film-item-meta__meta-additional-item'][1]/text()")[
                        i - 1]
                    item_genre = t.xpath("//span[@class='selection-film-item-meta__meta-additional-item'][2]/text()")[
                        i - 1]
                    url_item = t.xpath("//a[@class='selection-film-item-meta__link']/@href")[i - 1]
                    rating_item = t.xpath("//span[contains(@class,'rating__value')]/text()")[i - 1]

                    movie_list.append(name)
                    img_list.append(img)
                    country_list.append(country)
                    genre_item_list.append(item_genre)
                    url_list.append(url_item)
                    rating_list.append(rating_item)
                else:
                    pass
    for i in range(len(movie_list)):
        parsed_data.append({
            'Movie name': movie_list[i],
            'Country': country_list[i],
            'Genre': genre_item_list[i],
            'Url': url_list[i],
            'Rating': rating_list[i]
        })
    r.close()
    return parsed_data


bot = telebot.TeleBot(token='2133317357:AAEAEsYGXuZqD0psX-GapGh1YjCrFcNkToU')


def keyboard():
    markup = telebot.types.InlineKeyboardMarkup(row_width=3)
    button1 = telebot.types.InlineKeyboardButton(text='–ö–æ–º–µ–¥–∏—è üòÇ', callback_data='–∫–æ–º–µ–¥–∏—è')
    button2 = telebot.types.InlineKeyboardButton(text='–î—Ä–∞–º–∞ üò¢', callback_data='–¥—Ä–∞–º–∞')
    button3 = telebot.types.InlineKeyboardButton(text='–ë–æ–µ–≤–∏–∫ üî•', callback_data='–±–æ–µ–≤–∏–∫')
    button4 = telebot.types.InlineKeyboardButton(text='–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞ üëΩ', callback_data='—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞')
    button5 = telebot.types.InlineKeyboardButton(text='–î–µ—Ç–µ–∫—Ç–∏–≤ üïµ', callback_data='–¥–µ—Ç–µ–∫—Ç–∏–≤')
    button6 = telebot.types.InlineKeyboardButton(text='–£–∂–∞—Å—ã üò±', callback_data='—É–∂–∞—Å—ã')
    button7 = telebot.types.InlineKeyboardButton(text='–§—ç–Ω—Ç–µ–∑–∏ üßõ‚Äç‚ôÇ', callback_data='—Ñ—ç–Ω—Ç–µ–∑–∏')
    button8 = telebot.types.InlineKeyboardButton(text='–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', callback_data='–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è')
    button9 = telebot.types.InlineKeyboardButton(text='–¢—Ä–∏–ª–ª–µ—Ä üò≤', callback_data='—Ç—Ä–∏–ª–ª–µ—Ä')
    button10 = telebot.types.InlineKeyboardButton(text='–ú–µ–ª–æ–¥—Ä–∞–º–∞ üíë', callback_data='–º–µ–ª–æ–¥—Ä–∞–º–∞')
    button11 = telebot.types.InlineKeyboardButton(text='–ú—É–ª—å—Ç—Ñ–∏–ª—å–º üç≠', callback_data='–º—É–ª—å—Ç—Ñ–∏–ª—å–º')
    button12 = telebot.types.InlineKeyboardButton(text='–ö—Ä–∏–º–∏–Ω–∞–ª üî™', callback_data='–∫—Ä–∏–º–∏–Ω–∞–ª')
    markup.add(button1, button2, button3, button4, button5, button6, button7, button8
               , button9, button10, button11, button12)
    return markup


@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {message.from_user.first_name}!\n–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä.',
                     reply_markup=keyboard())


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    cqd = call.data
    if cqd == '–∫–æ–º–µ–¥–∏—è':
        get_movie(cqd, call)
    elif cqd == '–¥—Ä–∞–º–∞':
        get_movie(cqd, call)
    elif cqd == '–±–æ–µ–≤–∏–∫':
        get_movie(cqd, call)
    elif cqd == '—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞':
        get_movie(cqd, call)
    elif cqd == '–¥–µ—Ç–µ–∫—Ç–∏–≤':
        get_movie(cqd, call)
    elif cqd == '—É–∂–∞—Å—ã':
        get_movie(cqd, call)
    elif cqd == '—Ñ—ç–Ω—Ç–µ–∑–∏':
        get_movie(cqd, call)
    elif cqd == '–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è':
        get_movie(cqd, call)
    elif cqd == '—Ç—Ä–∏–ª–ª–µ—Ä':
        get_movie(cqd, call)
    elif cqd == '–º–µ–ª–æ–¥—Ä–∞–º–∞':
        get_movie(cqd, call)
    elif cqd == '–º—É–ª—å—Ç—Ñ–∏–ª—å–º':
        get_movie(cqd, call)
    elif cqd == '–∫—Ä–∏–º–∏–Ω–∞–ª':
        get_movie(cqd, call)
    else:
        bot.send_message(call.message.chat.id, text=f'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞!')


def get_movie(cqd, call):
    bot.send_message(call.message.chat.id, text='–ü–æ–¥–±–∏—Ä–∞—é —Ñ–∏–ª—å–º')
    result = main(cqd)
    new_result = random.sample(list(result), 5)
    for i in range(len(new_result)):
        bot.send_message(call.message.chat.id, text=f"{i + 1}. \n–ù–∞–∑–≤–∞–Ω–∏–µ: {new_result[i]['Movie name']}"
                                                    f"\n–°—Ç—Ä–∞–Ω–∞: {new_result[i]['Country']}\n"f"–ñ–∞–Ω—Ä: {new_result[i]['Genre']}\n"
                                                    f"–°—Å—ã–ª–∫–∞: https://www.kinopoisk.ru/{new_result[i]['Url']}\n"
                                                    f"–û—Ü–µ–Ω–∫–∞: {new_result[i]['Rating']}")
    bot.send_message(call.message.chat.id, text='\n–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä', reply_markup=keyboard())


bot.polling()

